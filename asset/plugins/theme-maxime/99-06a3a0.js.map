{"version":3,"file":"99-06a3a0.js","mappings":"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","sources":["webpack://TopWritePlugins.theme-maxime/../../../topteam/write/packages/node_modules/object-assign/index.js","webpack://TopWritePlugins.theme-maxime/../../../topteam/write/packages/node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://TopWritePlugins.theme-maxime/../../../topteam/write/packages/node_modules/react/jsx-runtime.js","webpack://TopWritePlugins.theme-maxime/../node_modules/@react-hook/latest/dist/module/index.js","webpack://TopWritePlugins.theme-maxime/../node_modules/@react-hook/throttle/dist/module/index.js","webpack://TopWritePlugins.theme-maxime/../node_modules/@react-hook/event/dist/module/index.js","webpack://TopWritePlugins.theme-maxime/../node_modules/@react-hook/window-scroll/dist/module/index.js","webpack://TopWritePlugins.theme-maxime/../node_modules/boolbase/index.js","webpack://TopWritePlugins.theme-maxime/../node_modules/css-selector-parser/lib/index.js","webpack://TopWritePlugins.theme-maxime/../node_modules/css-selector-parser/lib/parser-context.js","webpack://TopWritePlugins.theme-maxime/../node_modules/css-selector-parser/lib/render.js","webpack://TopWritePlugins.theme-maxime/../node_modules/css-selector-parser/lib/utils.js","webpack://TopWritePlugins.theme-maxime/../node_modules/nth-check/lib/compile.js","webpack://TopWritePlugins.theme-maxime/../node_modules/nth-check/lib/index.js","webpack://TopWritePlugins.theme-maxime/../node_modules/nth-check/lib/parse.js","webpack://TopWritePlugins.theme-maxime/../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","webpack://TopWritePlugins.theme-maxime/../node_modules/mdast-util-to-string/index.js","webpack://TopWritePlugins.theme-maxime/../node_modules/zwitch/index.js","webpack://TopWritePlugins.theme-maxime/../node_modules/unist-util-select/lib/util.js","webpack://TopWritePlugins.theme-maxime/../node_modules/unist-util-select/lib/nest.js","webpack://TopWritePlugins.theme-maxime/../node_modules/unist-util-is/index.js","webpack://TopWritePlugins.theme-maxime/../node_modules/unist-util-select/lib/pseudo.js","webpack://TopWritePlugins.theme-maxime/../node_modules/unist-util-select/lib/attribute.js","webpack://TopWritePlugins.theme-maxime/../node_modules/unist-util-select/lib/test.js","webpack://TopWritePlugins.theme-maxime/../node_modules/unist-util-select/lib/name.js","webpack://TopWritePlugins.theme-maxime/../node_modules/unist-util-select/lib/any.js","webpack://TopWritePlugins.theme-maxime/../node_modules/unist-util-select/lib/parse.js","webpack://TopWritePlugins.theme-maxime/../node_modules/unist-util-select/index.js"],"sourcesContent":["/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';require(\"object-assign\");var f=require(\"react\"),g=60103;exports.Fragment=60107;if(\"function\"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h(\"react.element\");exports.Fragment=h(\"react.fragment\")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=\"\"+k);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import * as React from 'react';\n\nconst useLatest = current => {\n  const storedValue = React.useRef(current);\n  React.useEffect(() => {\n    storedValue.current = current;\n  });\n  return storedValue;\n};\n\nexport default useLatest;","import * as React from 'react';\nimport useLatest from '@react-hook/latest';\nconst perf = typeof performance !== 'undefined' ? performance : Date;\n\nconst now = () => perf.now();\n\nexport function useThrottleCallback(callback, fps = 30, leading = false) {\n  const storedCallback = useLatest(callback);\n  const ms = 1000 / fps;\n  const prev = React.useRef(0);\n  const trailingTimeout = React.useRef();\n\n  const clearTrailing = () => trailingTimeout.current && clearTimeout(trailingTimeout.current);\n\n  const deps = [fps, leading, storedCallback]; // Reset any time the deps change\n\n  function _ref() {\n    prev.current = 0;\n    clearTrailing();\n  }\n\n  React.useEffect(() => _ref, deps);\n  return React.useCallback(function () {\n    // eslint-disable-next-line prefer-rest-params\n    const args = arguments;\n    const rightNow = now();\n\n    const call = () => {\n      prev.current = rightNow;\n      clearTrailing();\n      storedCallback.current.apply(null, args);\n    };\n\n    const current = prev.current; // leading\n\n    if (leading && current === 0) return call(); // body\n\n    if (rightNow - current > ms) {\n      if (current > 0) return call();\n      prev.current = rightNow;\n    } // trailing\n\n\n    clearTrailing();\n    trailingTimeout.current = setTimeout(() => {\n      call();\n      prev.current = 0;\n    }, ms);\n  }, deps);\n}\nexport function useThrottle(initialState, fps, leading) {\n  const state = React.useState(initialState);\n  return [state[0], useThrottleCallback(state[1], fps, leading)];\n}","import * as React from 'react';\n\nfunction useEvent(target, type, listener, cleanup) {\n  const storedListener = React.useRef(listener);\n  const storedCleanup = React.useRef(cleanup);\n  React.useEffect(() => {\n    storedListener.current = listener;\n    storedCleanup.current = cleanup;\n  });\n  React.useEffect(() => {\n    const targetEl = target && 'current' in target ? target.current : target;\n    if (!targetEl) return;\n    let didUnsubscribe = 0;\n\n    function listener(...args) {\n      if (didUnsubscribe) return;\n      storedListener.current.apply(this, args);\n    }\n\n    targetEl.addEventListener(type, listener);\n    const cleanup = storedCleanup.current;\n    return () => {\n      didUnsubscribe = 1;\n      targetEl.removeEventListener(type, listener);\n      cleanup && cleanup();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [target, type]);\n}\n\nexport default useEvent;","import { useThrottle } from '@react-hook/throttle';\nimport useEvent from '@react-hook/event';\nconst win = typeof window === 'undefined' ? null : window;\n\nconst getScrollY = () => win.scrollY !== void 0 ? win.scrollY : win.pageYOffset === void 0 ? 0 : win.pageYOffset;\n\nexport const useWindowScroll = (fps = 30) => {\n  const state = useThrottle(typeof window === 'undefined' ? 0 : getScrollY, fps, true);\n  useEvent(win, 'scroll', () => state[1](getScrollY()));\n  return state[0];\n};\nexport default useWindowScroll;","module.exports = {\n\ttrueFunc: function trueFunc(){\n\t\treturn true;\n\t},\n\tfalseFunc: function falseFunc(){\n\t\treturn false;\n\t}\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar parser_context_1 = require(\"./parser-context\");\nvar render_1 = require(\"./render\");\nvar CssSelectorParser = /** @class */ (function () {\n    function CssSelectorParser() {\n        this.pseudos = {};\n        this.attrEqualityMods = {};\n        this.ruleNestingOperators = {};\n        this.substitutesEnabled = false;\n    }\n    CssSelectorParser.prototype.registerSelectorPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_1 = pseudos; _a < pseudos_1.length; _a++) {\n            var pseudo = pseudos_1[_a];\n            this.pseudos[pseudo] = 'selector';\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterSelectorPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_2 = pseudos; _a < pseudos_2.length; _a++) {\n            var pseudo = pseudos_2[_a];\n            delete this.pseudos[pseudo];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerNumericPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_3 = pseudos; _a < pseudos_3.length; _a++) {\n            var pseudo = pseudos_3[_a];\n            this.pseudos[pseudo] = 'numeric';\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterNumericPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_4 = pseudos; _a < pseudos_4.length; _a++) {\n            var pseudo = pseudos_4[_a];\n            delete this.pseudos[pseudo];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerNestingOperators = function () {\n        var operators = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operators[_i] = arguments[_i];\n        }\n        for (var _a = 0, operators_1 = operators; _a < operators_1.length; _a++) {\n            var operator = operators_1[_a];\n            this.ruleNestingOperators[operator] = true;\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterNestingOperators = function () {\n        var operators = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operators[_i] = arguments[_i];\n        }\n        for (var _a = 0, operators_2 = operators; _a < operators_2.length; _a++) {\n            var operator = operators_2[_a];\n            delete this.ruleNestingOperators[operator];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerAttrEqualityMods = function () {\n        var mods = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            mods[_i] = arguments[_i];\n        }\n        for (var _a = 0, mods_1 = mods; _a < mods_1.length; _a++) {\n            var mod = mods_1[_a];\n            this.attrEqualityMods[mod] = true;\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterAttrEqualityMods = function () {\n        var mods = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            mods[_i] = arguments[_i];\n        }\n        for (var _a = 0, mods_2 = mods; _a < mods_2.length; _a++) {\n            var mod = mods_2[_a];\n            delete this.attrEqualityMods[mod];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.enableSubstitutes = function () {\n        this.substitutesEnabled = true;\n        return this;\n    };\n    CssSelectorParser.prototype.disableSubstitutes = function () {\n        this.substitutesEnabled = false;\n        return this;\n    };\n    CssSelectorParser.prototype.parse = function (str) {\n        return parser_context_1.parseCssSelector(str, 0, this.pseudos, this.attrEqualityMods, this.ruleNestingOperators, this.substitutesEnabled);\n    };\n    CssSelectorParser.prototype.render = function (path) {\n        return render_1.renderEntity(path).trim();\n    };\n    return CssSelectorParser;\n}());\nexports.CssSelectorParser = CssSelectorParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nfunction parseCssSelector(str, pos, pseudos, attrEqualityMods, ruleNestingOperators, substitutesEnabled) {\n    var l = str.length;\n    var chr = '';\n    function getStr(quote, escapeTable) {\n        var result = '';\n        pos++;\n        chr = str.charAt(pos);\n        while (pos < l) {\n            if (chr === quote) {\n                pos++;\n                return result;\n            }\n            else if (chr === '\\\\') {\n                pos++;\n                chr = str.charAt(pos);\n                var esc = void 0;\n                if (chr === quote) {\n                    result += quote;\n                }\n                else if ((esc = escapeTable[chr]) !== undefined) {\n                    result += esc;\n                }\n                else if (utils_1.isHex(chr)) {\n                    var hex = chr;\n                    pos++;\n                    chr = str.charAt(pos);\n                    while (utils_1.isHex(chr)) {\n                        hex += chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (chr === ' ') {\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    result += String.fromCharCode(parseInt(hex, 16));\n                    continue;\n                }\n                else {\n                    result += chr;\n                }\n            }\n            else {\n                result += chr;\n            }\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function getIdent() {\n        var result = '';\n        chr = str.charAt(pos);\n        while (pos < l) {\n            if (utils_1.isIdent(chr)) {\n                result += chr;\n            }\n            else if (chr === '\\\\') {\n                pos++;\n                if (pos >= l) {\n                    throw Error('Expected symbol but end of file reached.');\n                }\n                chr = str.charAt(pos);\n                if (utils_1.identSpecialChars[chr]) {\n                    result += chr;\n                }\n                else if (utils_1.isHex(chr)) {\n                    var hex = chr;\n                    pos++;\n                    chr = str.charAt(pos);\n                    while (utils_1.isHex(chr)) {\n                        hex += chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (chr === ' ') {\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    result += String.fromCharCode(parseInt(hex, 16));\n                    continue;\n                }\n                else {\n                    result += chr;\n                }\n            }\n            else {\n                return result;\n            }\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function skipWhitespace() {\n        chr = str.charAt(pos);\n        var result = false;\n        while (chr === ' ' || chr === \"\\t\" || chr === \"\\n\" || chr === \"\\r\" || chr === \"\\f\") {\n            result = true;\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function parse() {\n        var res = parseSelector();\n        if (pos < l) {\n            throw Error('Rule expected but \"' + str.charAt(pos) + '\" found.');\n        }\n        return res;\n    }\n    function parseSelector() {\n        var selector = parseSingleSelector();\n        if (!selector) {\n            return null;\n        }\n        var res = selector;\n        chr = str.charAt(pos);\n        while (chr === ',') {\n            pos++;\n            skipWhitespace();\n            if (res.type !== 'selectors') {\n                res = {\n                    type: 'selectors',\n                    selectors: [selector]\n                };\n            }\n            selector = parseSingleSelector();\n            if (!selector) {\n                throw Error('Rule expected after \",\".');\n            }\n            res.selectors.push(selector);\n        }\n        return res;\n    }\n    function parseSingleSelector() {\n        skipWhitespace();\n        var selector = {\n            type: 'ruleSet'\n        };\n        var rule = parseRule();\n        if (!rule) {\n            return null;\n        }\n        var currentRule = selector;\n        while (rule) {\n            rule.type = 'rule';\n            currentRule.rule = rule;\n            currentRule = rule;\n            skipWhitespace();\n            chr = str.charAt(pos);\n            if (pos >= l || chr === ',' || chr === ')') {\n                break;\n            }\n            if (ruleNestingOperators[chr]) {\n                var op = chr;\n                pos++;\n                skipWhitespace();\n                rule = parseRule();\n                if (!rule) {\n                    throw Error('Rule expected after \"' + op + '\".');\n                }\n                rule.nestingOperator = op;\n            }\n            else {\n                rule = parseRule();\n                if (rule) {\n                    rule.nestingOperator = null;\n                }\n            }\n        }\n        return selector;\n    }\n    // @ts-ignore no-overlap\n    function parseRule() {\n        var rule = null;\n        while (pos < l) {\n            chr = str.charAt(pos);\n            if (chr === '*') {\n                pos++;\n                (rule = rule || {}).tagName = '*';\n            }\n            else if (utils_1.isIdentStart(chr) || chr === '\\\\') {\n                (rule = rule || {}).tagName = getIdent();\n            }\n            else if (chr === '.') {\n                pos++;\n                rule = rule || {};\n                (rule.classNames = rule.classNames || []).push(getIdent());\n            }\n            else if (chr === '#') {\n                pos++;\n                (rule = rule || {}).id = getIdent();\n            }\n            else if (chr === '[') {\n                pos++;\n                skipWhitespace();\n                var attr = {\n                    name: getIdent()\n                };\n                skipWhitespace();\n                // @ts-ignore\n                if (chr === ']') {\n                    pos++;\n                }\n                else {\n                    var operator = '';\n                    if (attrEqualityMods[chr]) {\n                        operator = chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (pos >= l) {\n                        throw Error('Expected \"=\" but end of file reached.');\n                    }\n                    if (chr !== '=') {\n                        throw Error('Expected \"=\" but \"' + chr + '\" found.');\n                    }\n                    attr.operator = operator + '=';\n                    pos++;\n                    skipWhitespace();\n                    var attrValue = '';\n                    attr.valueType = 'string';\n                    // @ts-ignore\n                    if (chr === '\"') {\n                        attrValue = getStr('\"', utils_1.doubleQuotesEscapeChars);\n                        // @ts-ignore\n                    }\n                    else if (chr === '\\'') {\n                        attrValue = getStr('\\'', utils_1.singleQuoteEscapeChars);\n                        // @ts-ignore\n                    }\n                    else if (substitutesEnabled && chr === '$') {\n                        pos++;\n                        attrValue = getIdent();\n                        attr.valueType = 'substitute';\n                    }\n                    else {\n                        while (pos < l) {\n                            if (chr === ']') {\n                                break;\n                            }\n                            attrValue += chr;\n                            pos++;\n                            chr = str.charAt(pos);\n                        }\n                        attrValue = attrValue.trim();\n                    }\n                    skipWhitespace();\n                    if (pos >= l) {\n                        throw Error('Expected \"]\" but end of file reached.');\n                    }\n                    if (chr !== ']') {\n                        throw Error('Expected \"]\" but \"' + chr + '\" found.');\n                    }\n                    pos++;\n                    attr.value = attrValue;\n                }\n                rule = rule || {};\n                (rule.attrs = rule.attrs || []).push(attr);\n            }\n            else if (chr === ':') {\n                pos++;\n                var pseudoName = getIdent();\n                var pseudo = {\n                    name: pseudoName\n                };\n                // @ts-ignore\n                if (chr === '(') {\n                    pos++;\n                    var value = '';\n                    skipWhitespace();\n                    if (pseudos[pseudoName] === 'selector') {\n                        pseudo.valueType = 'selector';\n                        value = parseSelector();\n                    }\n                    else {\n                        pseudo.valueType = pseudos[pseudoName] || 'string';\n                        // @ts-ignore\n                        if (chr === '\"') {\n                            value = getStr('\"', utils_1.doubleQuotesEscapeChars);\n                            // @ts-ignore\n                        }\n                        else if (chr === '\\'') {\n                            value = getStr('\\'', utils_1.singleQuoteEscapeChars);\n                            // @ts-ignore\n                        }\n                        else if (substitutesEnabled && chr === '$') {\n                            pos++;\n                            value = getIdent();\n                            pseudo.valueType = 'substitute';\n                        }\n                        else {\n                            while (pos < l) {\n                                if (chr === ')') {\n                                    break;\n                                }\n                                value += chr;\n                                pos++;\n                                chr = str.charAt(pos);\n                            }\n                            value = value.trim();\n                        }\n                        skipWhitespace();\n                    }\n                    if (pos >= l) {\n                        throw Error('Expected \")\" but end of file reached.');\n                    }\n                    if (chr !== ')') {\n                        throw Error('Expected \")\" but \"' + chr + '\" found.');\n                    }\n                    pos++;\n                    pseudo.value = value;\n                }\n                rule = rule || {};\n                (rule.pseudos = rule.pseudos || []).push(pseudo);\n            }\n            else {\n                break;\n            }\n        }\n        return rule;\n    }\n    return parse();\n}\nexports.parseCssSelector = parseCssSelector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nfunction renderEntity(entity) {\n    var res = '';\n    switch (entity.type) {\n        case 'ruleSet':\n            var currentEntity = entity.rule;\n            var parts = [];\n            while (currentEntity) {\n                if (currentEntity.nestingOperator) {\n                    parts.push(currentEntity.nestingOperator);\n                }\n                parts.push(renderEntity(currentEntity));\n                currentEntity = currentEntity.rule;\n            }\n            res = parts.join(' ');\n            break;\n        case 'selectors':\n            res = entity.selectors.map(renderEntity).join(', ');\n            break;\n        case 'rule':\n            if (entity.tagName) {\n                if (entity.tagName === '*') {\n                    res = '*';\n                }\n                else {\n                    res = utils_1.escapeIdentifier(entity.tagName);\n                }\n            }\n            if (entity.id) {\n                res += \"#\" + utils_1.escapeIdentifier(entity.id);\n            }\n            if (entity.classNames) {\n                res += entity.classNames.map(function (cn) {\n                    return \".\" + (utils_1.escapeIdentifier(cn));\n                }).join('');\n            }\n            if (entity.attrs) {\n                res += entity.attrs.map(function (attr) {\n                    if ('operator' in attr) {\n                        if (attr.valueType === 'substitute') {\n                            return \"[\" + utils_1.escapeIdentifier(attr.name) + attr.operator + \"$\" + attr.value + \"]\";\n                        }\n                        else {\n                            return \"[\" + utils_1.escapeIdentifier(attr.name) + attr.operator + utils_1.escapeStr(attr.value) + \"]\";\n                        }\n                    }\n                    else {\n                        return \"[\" + utils_1.escapeIdentifier(attr.name) + \"]\";\n                    }\n                }).join('');\n            }\n            if (entity.pseudos) {\n                res += entity.pseudos.map(function (pseudo) {\n                    if (pseudo.valueType) {\n                        if (pseudo.valueType === 'selector') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"(\" + renderEntity(pseudo.value) + \")\";\n                        }\n                        else if (pseudo.valueType === 'substitute') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"($\" + pseudo.value + \")\";\n                        }\n                        else if (pseudo.valueType === 'numeric') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"(\" + pseudo.value + \")\";\n                        }\n                        else {\n                            return (\":\" + utils_1.escapeIdentifier(pseudo.name) +\n                                \"(\" + utils_1.escapeIdentifier(pseudo.value) + \")\");\n                        }\n                    }\n                    else {\n                        return \":\" + utils_1.escapeIdentifier(pseudo.name);\n                    }\n                }).join('');\n            }\n            break;\n        default:\n            throw Error('Unknown entity type: \"' + entity.type + '\".');\n    }\n    return res;\n}\nexports.renderEntity = renderEntity;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isIdentStart(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c === '-') || (c === '_');\n}\nexports.isIdentStart = isIdentStart;\nfunction isIdent(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') || c === '-' || c === '_';\n}\nexports.isIdent = isIdent;\nfunction isHex(c) {\n    return (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F') || (c >= '0' && c <= '9');\n}\nexports.isHex = isHex;\nfunction escapeIdentifier(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (exports.identSpecialChars[chr]) {\n            result += '\\\\' + chr;\n        }\n        else {\n            if (!(chr === '_' || chr === '-' ||\n                (chr >= 'A' && chr <= 'Z') ||\n                (chr >= 'a' && chr <= 'z') ||\n                (i !== 0 && chr >= '0' && chr <= '9'))) {\n                var charCode = chr.charCodeAt(0);\n                if ((charCode & 0xF800) === 0xD800) {\n                    var extraCharCode = s.charCodeAt(i++);\n                    if ((charCode & 0xFC00) !== 0xD800 || (extraCharCode & 0xFC00) !== 0xDC00) {\n                        throw Error('UCS-2(decode): illegal sequence');\n                    }\n                    charCode = ((charCode & 0x3FF) << 10) + (extraCharCode & 0x3FF) + 0x10000;\n                }\n                result += '\\\\' + charCode.toString(16) + ' ';\n            }\n            else {\n                result += chr;\n            }\n        }\n        i++;\n    }\n    return result;\n}\nexports.escapeIdentifier = escapeIdentifier;\nfunction escapeStr(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    var replacement;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (chr === '\"') {\n            chr = '\\\\\"';\n        }\n        else if (chr === '\\\\') {\n            chr = '\\\\\\\\';\n        }\n        else if ((replacement = exports.strReplacementsRev[chr]) !== undefined) {\n            chr = replacement;\n        }\n        result += chr;\n        i++;\n    }\n    return \"\\\"\" + result + \"\\\"\";\n}\nexports.escapeStr = escapeStr;\nexports.identSpecialChars = {\n    '!': true,\n    '\"': true,\n    '#': true,\n    '$': true,\n    '%': true,\n    '&': true,\n    '\\'': true,\n    '(': true,\n    ')': true,\n    '*': true,\n    '+': true,\n    ',': true,\n    '.': true,\n    '/': true,\n    ';': true,\n    '<': true,\n    '=': true,\n    '>': true,\n    '?': true,\n    '@': true,\n    '[': true,\n    '\\\\': true,\n    ']': true,\n    '^': true,\n    '`': true,\n    '{': true,\n    '|': true,\n    '}': true,\n    '~': true\n};\nexports.strReplacementsRev = {\n    '\\n': '\\\\n',\n    '\\r': '\\\\r',\n    '\\t': '\\\\t',\n    '\\f': '\\\\f',\n    '\\v': '\\\\v'\n};\nexports.singleQuoteEscapeChars = {\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    f: '\\f',\n    '\\\\': '\\\\',\n    '\\'': '\\''\n};\nexports.doubleQuotesEscapeChars = {\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    f: '\\f',\n    '\\\\': '\\\\',\n    '\"': '\"'\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compile = void 0;\nvar boolbase_1 = require(\"boolbase\");\n/**\n * Returns a function that checks if an elements index matches the given rule\n * highly optimized to return the fastest solution.\n *\n * @param parsed A tuple [a, b], as returned by `parse`.\n * @returns A highly optimized function that returns whether an index matches the nth-check.\n * @example\n * const check = nthCheck.compile([2, 3]);\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n */\nfunction compile(parsed) {\n    var a = parsed[0];\n    // Subtract 1 from `b`, to convert from one- to zero-indexed.\n    var b = parsed[1] - 1;\n    /*\n     * When `b <= 0`, `a * n` won't be lead to any matches for `a < 0`.\n     * Besides, the specification states that no elements are\n     * matched when `a` and `b` are 0.\n     *\n     * `b < 0` here as we subtracted 1 from `b` above.\n     */\n    if (b < 0 && a <= 0)\n        return boolbase_1.falseFunc;\n    // When `a` is in the range -1..1, it matches any element (so only `b` is checked).\n    if (a === -1)\n        return function (index) { return index <= b; };\n    if (a === 0)\n        return function (index) { return index === b; };\n    // When `b <= 0` and `a === 1`, they match any element.\n    if (a === 1)\n        return b < 0 ? boolbase_1.trueFunc : function (index) { return index >= b; };\n    /*\n     * Otherwise, modulo can be used to check if there is a match.\n     *\n     * Modulo doesn't care about the sign, so let's use `a`s absolute value.\n     */\n    var absA = Math.abs(a);\n    // Get `b mod a`, + a if this is negative.\n    var bMod = ((b % absA) + absA) % absA;\n    return a > 1\n        ? function (index) { return index >= b && index % absA === bMod; }\n        : function (index) { return index <= b && index % absA === bMod; };\n}\nexports.compile = compile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compile = exports.parse = void 0;\nvar parse_1 = require(\"./parse\");\nObject.defineProperty(exports, \"parse\", { enumerable: true, get: function () { return parse_1.parse; } });\nvar compile_1 = require(\"./compile\");\nObject.defineProperty(exports, \"compile\", { enumerable: true, get: function () { return compile_1.compile; } });\n/**\n * Parses and compiles a formula to a highly optimized function.\n * Combination of `parse` and `compile`.\n *\n * If the formula doesn't match any elements,\n * it returns [`boolbase`](https://github.com/fb55/boolbase)'s `falseFunc`.\n * Otherwise, a function accepting an _index_ is returned, which returns\n * whether or not the passed _index_ matches the formula.\n *\n * Note: The nth-rule starts counting at `1`, the returned function at `0`.\n *\n * @param formula The formula to compile.\n * @example\n * const check = nthCheck(\"2n+3\");\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n */\nfunction nthCheck(formula) {\n    return (0, compile_1.compile)((0, parse_1.parse)(formula));\n}\nexports.default = nthCheck;\n","\"use strict\";\n// Following http://www.w3.org/TR/css3-selectors/#nth-child-pseudo\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse = void 0;\n// Whitespace as per https://www.w3.org/TR/selectors-3/#lex is \" \\t\\r\\n\\f\"\nvar whitespace = new Set([9, 10, 12, 13, 32]);\nvar ZERO = \"0\".charCodeAt(0);\nvar NINE = \"9\".charCodeAt(0);\n/**\n * Parses an expression.\n *\n * @throws An `Error` if parsing fails.\n * @returns An array containing the integer step size and the integer offset of the nth rule.\n * @example nthCheck.parse(\"2n+3\"); // returns [2, 3]\n */\nfunction parse(formula) {\n    formula = formula.trim().toLowerCase();\n    if (formula === \"even\") {\n        return [2, 0];\n    }\n    else if (formula === \"odd\") {\n        return [2, 1];\n    }\n    // Parse [ ['-'|'+']? INTEGER? {N} [ S* ['-'|'+'] S* INTEGER ]?\n    var idx = 0;\n    var a = 0;\n    var sign = readSign();\n    var number = readNumber();\n    if (idx < formula.length && formula.charAt(idx) === \"n\") {\n        idx++;\n        a = sign * (number !== null && number !== void 0 ? number : 1);\n        skipWhitespace();\n        if (idx < formula.length) {\n            sign = readSign();\n            skipWhitespace();\n            number = readNumber();\n        }\n        else {\n            sign = number = 0;\n        }\n    }\n    // Throw if there is anything else\n    if (number === null || idx < formula.length) {\n        throw new Error(\"n-th rule couldn't be parsed ('\" + formula + \"')\");\n    }\n    return [a, sign * number];\n    function readSign() {\n        if (formula.charAt(idx) === \"-\") {\n            idx++;\n            return -1;\n        }\n        if (formula.charAt(idx) === \"+\") {\n            idx++;\n        }\n        return 1;\n    }\n    function readNumber() {\n        var start = idx;\n        var value = 0;\n        while (idx < formula.length &&\n            formula.charCodeAt(idx) >= ZERO &&\n            formula.charCodeAt(idx) <= NINE) {\n            value = value * 10 + (formula.charCodeAt(idx) - ZERO);\n            idx++;\n        }\n        // Return `null` if we didn't read anything.\n        return idx === start ? null : value;\n    }\n    function skipWhitespace() {\n        while (idx < formula.length &&\n            whitespace.has(formula.charCodeAt(idx))) {\n            idx++;\n        }\n    }\n}\nexports.parse = parse;\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","var own = {}.hasOwnProperty\n\n/**\n * @callback Handler\n * @param {...unknown} value\n * @return {unknown}\n *\n * @typedef {Record<string, Handler>} Handlers\n *\n * @typedef {Object} Options\n * @property {Handler} [unknown]\n * @property {Handler} [invalid]\n * @property {Handlers} [handlers]\n */\n\n/**\n * Handle values based on a property.\n *\n * @param {string} key\n * @param {Options} [options]\n */\nexport function zwitch(key, options) {\n  var settings = options || {}\n\n  /**\n   * Handle one value.\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @param {...unknown} [value]\n   * @this {unknown}\n   * @returns {unknown}\n   * @property {Handler} invalid\n   * @property {Handler} unknown\n   * @property {Handlers} handlers\n   */\n  function one(value) {\n    var fn = one.invalid\n    var handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      fn = own.call(handlers, value[key]) ? handlers[value[key]] : one.unknown\n    }\n\n    if (fn) {\n      return fn.apply(this, arguments)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  return one\n}\n","/**\n * @typedef {import('./types.js').Selector} Selector\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RuleSet} RuleSet\n * @typedef {import('./types.js').RulePseudo} RulePseudo\n * @typedef {import('./types.js').Query} Query\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectIterator} SelectIterator\n * @typedef {import('./types.js').SelectState} SelectState\n */\n\n/**\n * @param {Node} node\n * @returns {node is Parent}\n */\nexport function root(node) {\n  return (\n    // Root in nlcst.\n    node.type === 'RootNode' ||\n    // Rest\n    node.type === 'root'\n  )\n}\n\n/**\n * @param {Node} node\n * @returns {node is Parent}\n */\nexport function parent(node) {\n  // @ts-expect-error: looks like a record.\n  return Array.isArray(node.children)\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Query} Query\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').SelectIterator} SelectIterator\n * @typedef {import('./types.js').Handler} Handler\n */\n\nimport {zwitch} from 'zwitch'\nimport {parent} from './util.js'\n\nconst own = {}.hasOwnProperty\n\nconst handle = zwitch('nestingOperator', {\n  // @ts-expect-error: hush.\n  unknown: unknownNesting,\n  // @ts-expect-error: hush.\n  invalid: topScan, // `undefined` is the top query selector.\n  handlers: {\n    // @ts-expect-error: hush.\n    null: descendant, // `null` is the descendant combinator.\n    // @ts-expect-error: hush.\n    '>': child,\n    // @ts-expect-error: hush.\n    '+': adjacentSibling,\n    // @ts-expect-error: hush.\n    '~': generalSibling\n  }\n})\n\n/** @type {Handler} */\nexport const nest = handle\n\n// Shouldn’t be invoked, parser gives correct data.\n/* c8 ignore next 6 */\n/**\n * @param {{[x: string]: unknown, type: string}} query\n */\nfunction unknownNesting(query) {\n  throw new Error('Unexpected nesting `' + query.nestingOperator + '`')\n}\n\n/** @type {Handler} */\nfunction topScan(query, node, index, parent, state) {\n  // Shouldn’t happen.\n  /* c8 ignore next 7 */\n  if (parent) {\n    throw new Error('topScan is supposed to be called from the root node')\n  }\n\n  if (!state.iterator) {\n    throw new Error('Expected `iterator` to be defined')\n  }\n\n  // Shouldn’t happen.\n  /* c8 ignore next 3 */\n  if (typeof index !== 'number') {\n    throw new TypeError('Expected `index` to be defined')\n  }\n\n  state.iterator(query, node, index, parent, state)\n  if (!state.shallow) descendant(query, node, index, parent, state)\n}\n\n/** @type {Handler} */\nfunction descendant(query, node, index, parent, state) {\n  // Shouldn’t happen.\n  /* c8 ignore next 3 */\n  if (!state.iterator) {\n    throw new Error('Expected `iterator` to be defined')\n  }\n\n  const previous = state.iterator\n\n  state.iterator = iterator\n  child(query, node, index, parent, state)\n\n  /** @type {SelectIterator} */\n  function iterator(query, node, index, parent, state) {\n    state.iterator = previous\n    previous(query, node, index, parent, state)\n    state.iterator = iterator\n\n    if (state.one && state.found) return\n\n    child(query, node, index, parent, state)\n  }\n}\n\n/** @type {Handler} */\nfunction child(query, node, _1, _2, state) {\n  if (!parent(node)) return\n  if (node.children.length === 0) return\n\n  new WalkIterator(query, node, state).each().done()\n}\n\n/** @type {Handler} */\nfunction adjacentSibling(query, _, index, parent, state) {\n  // Shouldn’t happen.\n  /* c8 ignore next 3 */\n  if (typeof index !== 'number') {\n    throw new TypeError('Expected `index` to be defined')\n  }\n\n  // Shouldn’t happen.\n  /* c8 ignore next */\n  if (!parent) return\n\n  new WalkIterator(query, parent, state)\n    .prefillTypeIndex(0, ++index)\n    .each(index, ++index)\n    .prefillTypeIndex(index)\n    .done()\n}\n\n/** @type {Handler} */\nfunction generalSibling(query, _, index, parent, state) {\n  // Shouldn’t happen.\n  /* c8 ignore next 3 */\n  if (typeof index !== 'number') {\n    throw new TypeError('Expected `index` to be defined')\n  }\n\n  // Shouldn’t happen.\n  /* c8 ignore next */\n  if (!parent) return\n\n  new WalkIterator(query, parent, state)\n    .prefillTypeIndex(0, ++index)\n    .each(index)\n    .done()\n}\n\nclass WalkIterator {\n  /**\n   * Handles typeIndex and typeCount properties for every walker.\n   *\n   * @param {Rule} query\n   * @param {Parent} parent\n   * @param {SelectState} state\n   */\n  constructor(query, parent, state) {\n    /** @type {Rule} */\n    this.query = query\n    /** @type {Parent} */\n    this.parent = parent\n    /** @type {SelectState} */\n    this.state = state\n    /** @type {TypeIndex|undefined} */\n    this.typeIndex = state.index ? new TypeIndex() : undefined\n    /** @type {Array.<Function>} */\n    this.delayed = []\n  }\n\n  /**\n   * @param {number|null|undefined} [x]\n   * @param {number|null|undefined} [y]\n   * @returns {this}\n   */\n  prefillTypeIndex(x, y) {\n    let [start, end] = this.defaults(x, y)\n\n    if (this.typeIndex) {\n      while (start < end) {\n        this.typeIndex.index(this.parent.children[start])\n        start++\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * @param {number|null|undefined} [x]\n   * @param {number|null|undefined} [y]\n   * @returns {this}\n   */\n  each(x, y) {\n    const [start, end] = this.defaults(x, y)\n    const child = this.parent.children[start]\n    /** @type {number} */\n    let index\n    /** @type {number} */\n    let nodeIndex\n\n    if (start >= end) return this\n\n    if (this.typeIndex) {\n      nodeIndex = this.typeIndex.nodes\n      index = this.typeIndex.index(child)\n      this.delayed.push(delay)\n    } else {\n      // Shouldn’t happen.\n      /* c8 ignore next 3 */\n      if (!this.state.iterator) {\n        throw new Error('Expected `iterator` to be defined')\n      }\n\n      this.state.iterator(this.query, child, start, this.parent, this.state)\n    }\n\n    // Stop if we’re looking for one node and it’s already found.\n    if (this.state.one && this.state.found) return this\n\n    return this.each(start + 1, end)\n\n    /**\n     * @this {WalkIterator}\n     */\n    function delay() {\n      // Shouldn’t happen.\n      /* c8 ignore next 3 */\n      if (!this.typeIndex) {\n        throw new TypeError('Expected `typeIndex` to be defined')\n      }\n\n      // Shouldn’t happen.\n      /* c8 ignore next 3 */\n      if (!this.state.iterator) {\n        throw new Error('Expected `iterator` to be defined')\n      }\n\n      this.state.typeIndex = index\n      this.state.nodeIndex = nodeIndex\n      this.state.typeCount = this.typeIndex.count(child)\n      this.state.nodeCount = this.typeIndex.nodes\n      this.state.iterator(this.query, child, start, this.parent, this.state)\n    }\n  }\n\n  /**\n   * Done!\n   * @returns {this}\n   */\n  done() {\n    let index = -1\n\n    while (++index < this.delayed.length) {\n      this.delayed[index].call(this)\n      if (this.state.one && this.state.found) break\n    }\n\n    return this\n  }\n\n  /**\n   * @param {number|null|undefined} [start]\n   * @param {number|null|undefined} [end]\n   * @returns {[number, number]}\n   */\n  defaults(start, end) {\n    if (start === null || start === undefined || start < 0) start = 0\n    if (end === null || end === undefined || end > this.parent.children.length)\n      end = this.parent.children.length\n    return [start, end]\n  }\n}\n\nclass TypeIndex {\n  constructor() {\n    /** @type {Object.<string, number>} */\n    this.counts = {}\n    /** @type {number} */\n    this.nodes = 0\n  }\n\n  /**\n   * @param {Node} node\n   * @returns {number}\n   */\n  index(node) {\n    const type = node.type\n\n    this.nodes++\n\n    if (!own.call(this.counts, type)) this.counts[type] = 0\n\n    // Note: `++` is intended to be postfixed!\n    return this.counts[type]++\n  }\n\n  /**\n   * @param {Node} node\n   * @returns {number|undefined}\n   */\n  count(node) {\n    return this.counts[node.type]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RulePseudo} RulePseudo\n * @typedef {import('./types.js').RulePseudoNth} RulePseudoNth\n * @typedef {import('./types.js').RulePseudoSelector} RulePseudoSelector\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').Selector} Selector\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').Node} Node\n */\n\nimport {zwitch} from 'zwitch'\nimport {convert} from 'unist-util-is'\nimport {parent} from './util.js'\n\nconst is = convert()\n\nconst handle = zwitch('name', {\n  // @ts-expect-error: hush.\n  unknown: unknownPseudo,\n  invalid: invalidPseudo,\n  handlers: {\n    // @ts-expect-error: hush.\n    any: matches,\n    // @ts-expect-error: hush.\n    blank: empty,\n    // @ts-expect-error: hush.\n    empty,\n    // @ts-expect-error: hush.\n    'first-child': firstChild,\n    // @ts-expect-error: hush.\n    'first-of-type': firstOfType,\n    // @ts-expect-error: hush.\n    has: hasSelector,\n    // @ts-expect-error: hush.\n    'last-child': lastChild,\n    // @ts-expect-error: hush.\n    'last-of-type': lastOfType,\n    // @ts-expect-error: hush.\n    matches,\n    // @ts-expect-error: hush.\n    not,\n    // @ts-expect-error: hush.\n    'nth-child': nthChild,\n    // @ts-expect-error: hush.\n    'nth-last-child': nthLastChild,\n    // @ts-expect-error: hush.\n    'nth-of-type': nthOfType,\n    // @ts-expect-error: hush.\n    'nth-last-of-type': nthLastOfType,\n    // @ts-expect-error: hush.\n    'only-child': onlyChild,\n    // @ts-expect-error: hush.\n    'only-of-type': onlyOfType,\n    // @ts-expect-error: hush.\n    root,\n    // @ts-expect-error: hush.\n    scope\n  }\n})\n\npseudo.needsIndex = [\n  'first-child',\n  'first-of-type',\n  'last-child',\n  'last-of-type',\n  'nth-child',\n  'nth-last-child',\n  'nth-of-type',\n  'nth-last-of-type',\n  'only-child',\n  'only-of-type'\n]\n\n/**\n * @param {Rule} query\n * @param {Node} node\n * @param {number|null} index\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nexport function pseudo(query, node, index, parent, state) {\n  const pseudos = query.pseudos\n  let offset = -1\n\n  while (++offset < pseudos.length) {\n    if (!handle(pseudos[offset], node, index, parent, state)) return false\n  }\n\n  return true\n}\n\n/**\n * @param {RulePseudoSelector} query\n * @param {Node} node\n * @param {number|null} _1\n * @param {Parent|null} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction matches(query, node, _1, _2, state) {\n  const shallow = state.shallow\n  const one = state.one\n\n  state.one = true\n  state.shallow = true\n\n  const result = state.any(query.value, node, state)[0] === node\n\n  state.shallow = shallow\n  state.one = one\n\n  return result\n}\n\n/**\n * @param {RulePseudoSelector} query\n * @param {Node} node\n * @param {number|null} index\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction not(query, node, index, parent, state) {\n  return !matches(query, node, index, parent, state)\n}\n\n/**\n * @param {RulePseudo} _1\n * @param {Node} node\n * @param {number|null} _2\n * @param {Parent|null} parent\n * @returns {boolean}\n */\nfunction root(_1, node, _2, parent) {\n  return is(node) && !parent\n}\n\n/**\n * @param {RulePseudo} _1\n * @param {Node} node\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction scope(_1, node, _2, _3, state) {\n  return (\n    is(node) &&\n    state.scopeNodes !== undefined &&\n    state.scopeNodes.includes(node)\n  )\n}\n\n/**\n * @param {RulePseudo} _1\n * @param {Node} node\n * @returns {boolean}\n */\nfunction empty(_1, node) {\n  return parent(node) ? node.children.length === 0 : !('value' in node)\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Node} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction firstChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.nodeIndex === 0 // Specifically `0`, not falsey.\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Node} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lastChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.nodeCount === 'number' &&\n    state.nodeIndex === state.nodeCount - 1\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Node} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction onlyChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.nodeCount === 1\n}\n\n/**\n * @param {RulePseudoNth} query\n * @param {Node} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return typeof state.nodeIndex === 'number' && query.value(state.nodeIndex)\n}\n\n/**\n * @param {RulePseudoNth} query\n * @param {Node} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthLastChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.nodeCount === 'number' &&\n    typeof state.nodeIndex === 'number' &&\n    query.value(state.nodeCount - state.nodeIndex - 1)\n  )\n}\n\n/**\n * @param {RulePseudoNth} query\n * @param {Node} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return typeof state.typeIndex === 'number' && query.value(state.typeIndex)\n}\n\n/**\n * @param {RulePseudoNth} query\n * @param {Node} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthLastOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.typeIndex === 'number' &&\n    typeof state.typeCount === 'number' &&\n    query.value(state.typeCount - 1 - state.typeIndex)\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Node} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction firstOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeIndex === 0\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Node} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lastOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.typeCount === 'number' &&\n    state.typeIndex === state.typeCount - 1\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Node} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction onlyOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeCount === 1\n}\n\n// Shouldn’t be invoked, parser gives correct data.\n/* c8 ignore next 3 */\nfunction invalidPseudo() {\n  throw new Error('Invalid pseudo-selector')\n}\n\n/**\n * @param {RulePseudo} query\n * @returns {boolean}\n */\nfunction unknownPseudo(query) {\n  if (query.name) {\n    throw new Error('Unknown pseudo-selector `' + query.name + '`')\n  }\n\n  throw new Error('Unexpected pseudo-element or empty pseudo-class')\n}\n\n/**\n * @param {SelectState} state\n * @param {RulePseudo|RulePseudoNth} query\n */\nfunction assertDeep(state, query) {\n  if (state.shallow) {\n    throw new Error('Cannot use `:' + query.name + '` without parent')\n  }\n}\n\n/**\n * @param {RulePseudoSelector} query\n * @param {Node} node\n * @param {number|null} _1\n * @param {Parent|null} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction hasSelector(query, node, _1, _2, state) {\n  const shallow = state.shallow\n  const one = state.one\n  const scopeNodes = state.scopeNodes\n  const value = appendScope(query.value)\n  const anything = state.any\n\n  state.shallow = false\n  state.one = true\n  state.scopeNodes = [node]\n\n  const result = Boolean(anything(value, node, state)[0])\n\n  state.shallow = shallow\n  state.one = one\n  state.scopeNodes = scopeNodes\n\n  return result\n}\n\n/**\n * @param {Selector} value\n */\nfunction appendScope(value) {\n  /** @type {Selectors} */\n  const selector =\n    value.type === 'ruleSet' ? {type: 'selectors', selectors: [value]} : value\n  let index = -1\n  /** @type {Rule} */\n  let rule\n\n  while (++index < selector.selectors.length) {\n    rule = selector.selectors[index].rule\n    rule.nestingOperator = null\n\n    // Needed if new pseudo’s are added that accepts commas (such as\n    // `:lang(en, nl)`)\n    /* c8 ignore else */\n    if (\n      !rule.pseudos ||\n      rule.pseudos.length !== 1 ||\n      rule.pseudos[0].name !== 'scope'\n    ) {\n      selector.selectors[index] = {\n        type: 'ruleSet',\n        rule: {\n          type: 'rule',\n          rule,\n          // @ts-expect-error pseudos are fine w/ just a name!\n          pseudos: [{name: 'scope'}]\n        }\n      }\n    }\n  }\n\n  return selector\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RuleAttr} RuleAttr\n * @typedef {import('./types.js').Node} Node\n */\n\nimport {zwitch} from 'zwitch'\n\nconst handle = zwitch('operator', {\n  // @ts-expect-error: hush.\n  unknown: unknownOperator,\n  // @ts-expect-error: hush.\n  invalid: exists,\n  handlers: {\n    // @ts-expect-error: hush.\n    '=': exact,\n    // @ts-expect-error: hush.\n    '^=': begins,\n    // @ts-expect-error: hush.\n    '$=': ends,\n    // @ts-expect-error: hush.\n    '*=': containsString,\n    // @ts-expect-error: hush.\n    '~=': containsArray\n  }\n})\n\n/**\n * @param {Rule} query\n * @param {Node} node\n */\nexport function attribute(query, node) {\n  let index = -1\n\n  while (++index < query.attrs.length) {\n    if (!handle(query.attrs[index], node)) return false\n  }\n\n  return true\n}\n\n/**\n * `[attr]`\n *\n * @param {RuleAttr} query\n * @param {Node} node\n */\nfunction exists(query, node) {\n  // @ts-expect-error: Looks like a record.\n  return node[query.name] !== null && node[query.name] !== undefined\n}\n\n/**\n * `[attr=value]`\n *\n * @param {RuleAttr} query\n * @param {Node} node\n */\nfunction exact(query, node) {\n  // @ts-expect-error: Looks like a record.\n  return exists(query, node) && String(node[query.name]) === query.value\n}\n\n/**\n * `[attr~=value]`\n *\n * @param {RuleAttr} query\n * @param {Node} node\n */\nfunction containsArray(query, node) {\n  /** @type {unknown} */\n  // @ts-expect-error: Looks like a record.\n  const value = node[query.name]\n\n  if (value === null || value === undefined) return false\n\n  // If this is an array, and the query is contained in it, return true.\n  // Coverage comment in place because TS turns `Array.isArray(unknown)`\n  // into `Array.<any>` instead of `Array.<unknown>`.\n  // type-coverage:ignore-next-line\n  if (Array.isArray(value) && value.includes(query.value)) {\n    return true\n  }\n\n  // For all other values, return whether this is an exact match.\n  return String(value) === query.value\n}\n\n/**\n * `[attr^=value]`\n *\n * @param {RuleAttr} query\n * @param {Node} node\n */\nfunction begins(query, node) {\n  /** @type {unknown} */\n  // @ts-expect-error: Looks like a record.\n  const value = node[query.name]\n\n  return (\n    query.value &&\n    typeof value === 'string' &&\n    value.slice(0, query.value.length) === query.value\n  )\n}\n\n/**\n * `[attr$=value]`\n *\n * @param {RuleAttr} query\n * @param {Node} node\n */\nfunction ends(query, node) {\n  /** @type {unknown} */\n  // @ts-expect-error: Looks like a record.\n  const value = node[query.name]\n\n  return (\n    query.value &&\n    typeof value === 'string' &&\n    value.slice(-query.value.length) === query.value\n  )\n}\n\n/**\n * `[attr*=value]`\n *\n * @param {RuleAttr} query\n * @param {Node} node\n */\nfunction containsString(query, node) {\n  /** @type {unknown} */\n  // @ts-expect-error: Looks like a record.\n  const value = node[query.name]\n  return query.value && typeof value === 'string' && value.includes(query.value)\n}\n\n// Shouldn’t be invoked, Parser throws an error instead.\n/* c8 ignore next 6 */\n/**\n * @param {{[x: string]: unknown, type: string}} query\n */\nfunction unknownOperator(query) {\n  throw new Error('Unknown operator `' + query.operator + '`')\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectState} SelectState\n */\n\nimport {attribute} from './attribute.js'\nimport {name} from './name.js'\nimport {pseudo} from './pseudo.js'\n\n/**\n * @param {Rule} query\n * @param {Node} node\n * @param {number|null} index\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nexport function test(query, node, index, parent, state) {\n  if (query.id) throw new Error('Invalid selector: id')\n  if (query.classNames) throw new Error('Invalid selector: class')\n\n  return Boolean(\n    node &&\n      (!query.tagName || name(query, node)) &&\n      (!query.attrs || attribute(query, node)) &&\n      (!query.pseudos || pseudo(query, node, index, parent, state))\n  )\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Node} Node\n */\n\n/**\n * @param {Rule} query\n * @param {Node} node\n */\nexport function name(query, node) {\n  return query.tagName === '*' || query.tagName === node.type\n}\n","/**\n * @typedef {import('./types.js').Selector} Selector\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RuleSet} RuleSet\n * @typedef {import('./types.js').RulePseudo} RulePseudo\n * @typedef {import('./types.js').Query} Query\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectIterator} SelectIterator\n * @typedef {import('./types.js').SelectState} SelectState\n */\n\nimport {zwitch} from 'zwitch'\nimport {nest} from './nest.js'\nimport {pseudo} from './pseudo.js'\nimport {test} from './test.js'\nimport {root} from './util.js'\n\nconst type = zwitch('type', {\n  // @ts-expect-error: hush.\n  unknown: unknownType,\n  invalid: invalidType,\n  // @ts-expect-error: hush.\n  handlers: {selectors, ruleSet, rule}\n})\n\n/**\n * @param {Selectors|RuleSet|Rule} query\n * @param {Node|undefined} node\n * @param {SelectState} state\n * @returns {Array.<Node>}\n */\nexport function any(query, node, state) {\n  // @ts-expect-error: fine.\n  return query && node ? type(query, node, state) : []\n}\n\n/**\n * @param {Selectors} query\n * @param {Node} node\n * @param {SelectState} state\n */\nfunction selectors(query, node, state) {\n  const collect = collector(state.one)\n  let index = -1\n\n  while (++index < query.selectors.length) {\n    collect(ruleSet(query.selectors[index], node, state))\n  }\n\n  return collect.result\n}\n\n/**\n * @param {RuleSet} query\n * @param {Node} node\n * @param {SelectState} state\n */\nfunction ruleSet(query, node, state) {\n  return rule(query.rule, node, state)\n}\n\n/**\n * @param {Rule} query\n * @param {Node} tree\n * @param {SelectState} state\n */\nfunction rule(query, tree, state) {\n  const collect = collector(state.one)\n\n  if (state.shallow && query.rule) {\n    throw new Error('Expected selector without nesting')\n  }\n\n  nest(\n    query,\n    tree,\n    0,\n    null,\n    configure(query, {\n      scopeNodes: root(tree) ? tree.children : [tree],\n      index: false,\n      iterator,\n      one: state.one,\n      shallow: state.shallow,\n      any: state.any\n    })\n  )\n\n  return collect.result\n\n  /** @type {SelectIterator} */\n  function iterator(query, node, index, parent, state) {\n    if (test(query, node, index, parent, state)) {\n      if (query.rule) {\n        nest(query.rule, node, index, parent, configure(query.rule, state))\n      } else {\n        collect(node)\n        state.found = true\n      }\n    }\n  }\n}\n\n/**\n * @template {SelectState} S\n * @param {Rule} query\n * @param {S} state\n * @returns {S}\n */\nfunction configure(query, state) {\n  const pseudos = query.pseudos || []\n  let index = -1\n\n  while (++index < pseudos.length) {\n    if (pseudo.needsIndex.includes(pseudos[index].name)) {\n      state.index = true\n      break\n    }\n  }\n\n  return state\n}\n\n// Shouldn’t be invoked, all data is handled.\n/* c8 ignore next 6 */\n/**\n * @param {{[x: string]: unknown, type: string}} query\n */\nfunction unknownType(query) {\n  throw new Error('Unknown type `' + query.type + '`')\n}\n\n// Shouldn’t be invoked, parser gives correct data.\n/* c8 ignore next 3 */\nfunction invalidType() {\n  throw new Error('Invalid type')\n}\n\n/**\n * @param {boolean|undefined} one\n */\nfunction collector(one) {\n  /** @type {Array.<Node>} */\n  const result = []\n  /** @type {boolean} */\n  let found\n\n  collect.result = result\n\n  return collect\n\n  /**\n   * Append nodes to array, filtering out duplicates.\n   *\n   * @param {Node|Array.<Node>} node\n   */\n  function collect(node) {\n    let index = -1\n\n    if ('length' in node) {\n      while (++index < node.length) {\n        collectOne(node[index])\n      }\n    } else {\n      collectOne(node)\n    }\n  }\n\n  /**\n   * @param {Node} node\n   */\n  function collectOne(node) {\n    if (one) {\n      /* Shouldn’t happen, safeguards performance problems. */\n      /* c8 ignore next */\n      if (found) throw new Error('Cannot collect multiple nodes')\n\n      found = true\n    }\n\n    if (!result.includes(node)) result.push(node)\n  }\n}\n","/**\n * @typedef {import('./types.js').Selector} Selector\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').RuleSet} RuleSet\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RulePseudo} RulePseudo\n * @typedef {import('./types.js').RulePseudoNth} RulePseudoNth\n */\n\nimport {CssSelectorParser} from 'css-selector-parser'\nimport fauxEsmNthCheck from 'nth-check'\nimport {zwitch} from 'zwitch'\n\n/** @type {import('nth-check').default} */\n// @ts-expect-error\nconst nthCheck = fauxEsmNthCheck.default\n\nconst nth = new Set([\n  'nth-child',\n  'nth-last-child',\n  'nth-of-type',\n  'nth-last-of-type'\n])\n\nconst parser = new CssSelectorParser()\n\nparser.registerAttrEqualityMods('~', '^', '$', '*')\nparser.registerSelectorPseudos('any', 'matches', 'not', 'has')\nparser.registerNestingOperators('>', '+', '~')\n\n// @ts-expect-error: hush.\nconst compile = zwitch('type', {handlers: {selectors, ruleSet, rule}})\n\n/**\n * @param {string} selector\n * @returns {Selector}\n */\nexport function parse(selector) {\n  if (typeof selector !== 'string') {\n    throw new TypeError('Expected `string` as selector, not `' + selector + '`')\n  }\n\n  // @ts-expect-error types are wrong.\n  return compile(parser.parse(selector))\n}\n\n/**\n * @param {Selectors} query\n */\nfunction selectors(query) {\n  const selectors = query.selectors\n  let index = -1\n\n  while (++index < selectors.length) {\n    compile(selectors[index])\n  }\n\n  return query\n}\n\n/**\n * @param {RuleSet} query\n */\nfunction ruleSet(query) {\n  return rule(query.rule)\n}\n\n/**\n * @param {Rule} query\n */\nfunction rule(query) {\n  const pseudos = query.pseudos || []\n  let index = -1\n  /** @type {RulePseudo|RulePseudoNth} */\n  let pseudo\n\n  while (++index < pseudos.length) {\n    pseudo = pseudos[index]\n\n    if (nth.has(pseudo.name)) {\n      // @ts-expect-error Patch a non-primitive type.\n      pseudo.value = nthCheck(pseudo.value)\n      // @ts-expect-error Patch a non-primitive type.\n      pseudo.valueType = 'function'\n    }\n  }\n\n  compile(query.rule)\n\n  return query\n}\n","/**\n * @typedef {import('unist').Node} Node\n */\n\nimport {any} from './lib/any.js'\nimport {parse} from './lib/parse.js'\n\n/**\n * @param {string} selector\n * @param {Node} [node]\n * @returns {boolean}\n */\nexport function matches(selector, node) {\n  return Boolean(any(parse(selector), node, {one: true, shallow: true, any})[0])\n}\n\n/**\n * @param {string} selector\n * @param {Node} [node]\n * @returns {Node|null}\n */\nexport function select(selector, node) {\n  return any(parse(selector), node, {one: true, any})[0] || null\n}\n\n/**\n * @param {string} selector\n * @param {Node} [node]\n * @returns {Array.<Node>}\n */\nexport function selectAll(selector, node) {\n  return any(parse(selector), node, {any})\n}\n"],"names":["getOwnPropertySymbols","Object","hasOwnProperty","prototype","propIsEnumerable","propertyIsEnumerable","toObject","val","TypeError","module","exports","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","map","n","join","test3","split","forEach","letter","keys","err","shouldUseNative","target","source","from","symbols","to","s","arguments","length","key","call","f","g","Fragment","Symbol","for","h","m","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","ref","__self","__source","q","c","a","k","b","d","e","l","defaultProps","$$typeof","type","props","_owner","current","jsx","jsxs","storedValue","perf","performance","Date","now","useThrottleCallback","callback","fps","leading","storedCallback","ms","prev","trailingTimeout","clearTrailing","clearTimeout","deps","_ref","args","rightNow","apply","setTimeout","listener","cleanup","storedListener","storedCleanup","targetEl","didUnsubscribe","this","addEventListener","removeEventListener","win","window","getScrollY","scrollY","pageYOffset","state","initialState","useThrottle","trueFunc","falseFunc","parser_context_1","render_1","CssSelectorParser","pseudos","attrEqualityMods","ruleNestingOperators","substitutesEnabled","registerSelectorPseudos","_i","_a","pseudos_1","pseudo","unregisterSelectorPseudos","pseudos_2","registerNumericPseudos","pseudos_3","unregisterNumericPseudos","pseudos_4","registerNestingOperators","operators","operators_1","operator","unregisterNestingOperators","operators_2","registerAttrEqualityMods","mods","mods_1","mod","unregisterAttrEqualityMods","mods_2","enableSubstitutes","disableSubstitutes","parse","str","parseCssSelector","render","path","renderEntity","trim","defineProperty","value","utils_1","pos","chr","getStr","quote","escapeTable","result","charAt","esc","undefined","isHex","hex","parseInt","getIdent","isIdent","Error","identSpecialChars","skipWhitespace","parseSelector","selector","parseSingleSelector","res","selectors","push","rule","parseRule","currentRule","op","nestingOperator","tagName","isIdentStart","classNames","id","attr","name","attrValue","valueType","doubleQuotesEscapeChars","singleQuoteEscapeChars","attrs","pseudoName","entity","currentEntity","parts","escapeIdentifier","cn","escapeStr","len","charCode","charCodeAt","extraCharCode","toString","replacement","strReplacementsRev","r","t","compile","boolbase_1","parsed","index","absA","Math","abs","bMod","parse_1","compile_1","formula","whitespace","Set","ZERO","NINE","toLowerCase","idx","sign","readSign","number","readNumber","start","has","_taggedTemplateLiteral","strings","raw","slice","freeze","defineProperties","node","options","includeImageAlt","one","alt","all","children","Array","isArray","values","own","zwitch","settings","fn","invalid","handlers","unknown","nest","query","parent","iterator","shallow","descendant","null","child","_","WalkIterator","prefillTypeIndex","each","done","previous","found","_1","_2","constructor","typeIndex","TypeIndex","delayed","x","y","end","defaults","nodeIndex","nodes","typeCount","count","nodeCount","counts","convert","test","ok","check","castFactory","typeFactory","tests","checks","any","parameters","anyFactory","propsFactory","Boolean","matches","blank","empty","_3","assertDeep","scopeNodes","appendScope","anything","not","root","scope","includes","offset","needsIndex","exists","attribute","collect","collector","ruleSet","tree","configure","collectOne","nthCheck","nth","parser","selectAll"],"sourceRoot":""}